{"version":3,"file":"static/js/663.1f9ffecd.chunk.js","mappings":"mOACA,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oB,SC6EhF,EAzEe,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAqBL,EAAAA,EAAAA,UAAS,MAArBM,GAAT,eAEMC,EAAOH,EAAaI,IAAI,UAAY,GAC1C,GAAwBR,EAAAA,EAAAA,UAASO,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACDN,IAGLO,EAAAA,EAAAA,IAAeP,GACdQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACTF,MAAK,SAAAG,GACA,GAA6B,IAAzBA,EAAMC,QAAQC,OAEzB,OAAOC,MAAM,2PAERnB,EAAkBgB,EAAMC,QAC/B,IACAG,OAAM,SAAAC,GAAK,OAAIjB,EAASiB,EAAb,GACjB,GAAC,CAAChB,IAwBD,OAAO,4BAEC,kBAAMiB,SAnBO,SAACC,GAClBA,EAAEC,iBAEkB,KAAhBjB,EAAKkB,QAMTzB,EAAkB,IAClBG,EAAgB,CAAEa,MAAOT,KALrBY,MAAM,4EAOb,EAOqCO,UAAWC,EAAzC,WACA,kBACKD,UAAWC,EACRC,KAAK,OACLC,MAAOtB,EACXuB,SA5BS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBvB,EAAQuB,EAAOF,MAAMG,cACxB,KA6BO,mBAAQJ,KAAK,SAASF,UAAWC,EAAjC,wBAIJ,yBACC5B,EAAekC,KAAI,SAAAC,GACR,OAAO,yBACH,UAAC,EAAAC,KAAD,CAAMC,GAAE,UAAKF,EAAKG,IAAMC,MAAO,CAAEC,KAAM9B,GAAvC,cAAqDyB,EAAKM,MAA1D,QADYN,EAAKG,GAGxB,QAEhB,C","sources":["webpack://react-homework-template/./src/pages/styles/Movies.module.css?8a83","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__z+QdS\",\"input\":\"Movies_input__KGCyU\",\"btn\":\"Movies_btn__D64Ac\"};","import { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMovieByName } from \"API/fetch\";\nimport css from 'pages/styles/Movies.module.css'\n\nconst Movies = () => {\n    const [filteredMovies, setFilteredMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [, setError] = useState(null);\n   \n    const text = searchParams.get('movie') || '' ;\n    const [name, setName] = useState(text);\n\n    const location = useLocation();\n\n   \n\n    useEffect(() => {\n        if (!text) {\n        return;\n      }\n        getMovieByName(text)\n        .then(response => response.json())\n            .then(movie => {\n                  if (movie.results.length === 0) {\n            \n           return alert('К сожалению по Вашему запросу ничего не найдено');\n          }\n                setFilteredMovies(movie.results)\n        })\n        .catch(error => setError(error))\n  },[text]);\n    \n   \n    const handelChange = ({ target }) => {\n        setName(target.value.toLowerCase())\n    }\n\n    const handelSubmit = (e) => {\n        e.preventDefault();\n\n        if (name.trim() === '')\n        {\n            alert('Введіть назву')\n            return;\n        }\n       \n        setFilteredMovies([]);\n        setSearchParams({ movie: name });\n        // setName(text)\n    }\n\n\n\n\n    return <div>\n        \n            <form onSubmit={handelSubmit} className={css.form}>\n            <input\n                 className={css.input}\n                    type=\"text\"\n                    value={name}\n                onChange={handelChange}\n                \n                />\n            <button type=\"submit\" className={css.btn} >Search</button>\n            \n                \n        </form>\n        <div>\n        {filteredMovies.map(film => {\n                    return <li key={film.id}>\n                        <Link to={`${film.id}`} state={{ from: location }}> {film.title} </Link>\n                    </li>\n                })}</div>\n    </div>\n}\n\nexport default Movies;"],"names":["useState","filteredMovies","setFilteredMovies","useSearchParams","searchParams","setSearchParams","setError","text","get","name","setName","location","useLocation","useEffect","getMovieByName","then","response","json","movie","results","length","alert","catch","error","onSubmit","e","preventDefault","trim","className","css","type","value","onChange","target","toLowerCase","map","film","Link","to","id","state","from","title"],"sourceRoot":""}